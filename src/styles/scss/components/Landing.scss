@import '../settings';

// I found part of the solution in Kartik Prabhu’s “Equal height images with flexbox”, 
// which shows a neat trick with the flex-grow property. If flex-grow is set to the 
// calculated aspect ratio of the image (with a common ratio like 3:2 written as 1.5), 
// images that have the same flex-basis (initial width) will maintain the same height while adjusting their width proportionally.

.landing {
	padding: 0 0 2px;;
	max-width: 100%;
	width: 100%;
	min-height: 400px;
	
	@media all and (min-width : 1025px) { 
		min-height: 600px;
	}

	background: $black; //linear-gradient($oil, $tuatara);
	// @include tropical-gradient(45deg)
	display: flex;
	flex-direction: column;
	justify-content: flex-start;	
	position: relative;
	
	@include elem('screen') {
		background: linear-gradient(darken($wes-magenta, 30%),transparentize($wes-magenta, .5) 20%),
              linear-gradient(0deg, $lorikeet-blue, transparent 80%),
              transparentize($jet, .9); // transparentize($jet, .6);
		position: absolute;
		width: 100%;
		height: 100%;
	}
	
	@include elem('panel') {
		animation: fadein 3s ease-in;
		position: absolute;
		left: 0;
		right: 0;
		margin: 0 auto;
		
		@media all and (min-width : 1025px) { 
			top: $base-spacing * 2;		
		}		
	}
	
	@include elem('intro') {
		text-align: center;
		font-weight: 500;
	}
	
	@include elem('cta') {
		margin-top: $base-spacing * 2;
		display: flex;
		flex-direction: column;
		p {
			text-align: center;			
		}
		@include mod('no-margin') {
			margin-top: 0;
		}
		
	}
	
	@include elem('cta-btns') {
		display: flex;
		justify-content: center;

	}

	@include elem('bird-btn') {
		display: flex;
		align-items: center;

		svg {
			margin-right: $base-spacing;
			fill: $vapor;
		}
	}
	
	@include elem('hero-grid') {
		display: flex;
		margin: $base-spacing / 16 $base-spacing / -2 0 $base-spacing * -1;
		margin: 1px 0 0 -0;  
		// flex-direction: column;
		// height: 200px;
	}
	
	
	@include elem('grid-image') {
		width: 100%;
		// padding: $base-spacing / 4 0 0 $base-spacing / 4;
		padding: 1px 1px 0 1px;
		// height: auto;
		
		img {
			@include img-responsive();
			min-height: 100%;
		}
		
		@include mod('aspect4x3') {
			flex: 1.333333 1 0%;
		}
		
		@include mod('aspect3x4') {
			flex: .75 1 0%;
		}
	}
}

@keyframes fadein {
    from { opacity: 0; }
    to   { opacity: 1; }
}